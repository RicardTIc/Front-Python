{"ast":null,"code":"import { signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/progress-bar\";\nfunction LoadingSpinnerComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"mat-progress-bar\", 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoadingSpinnerComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Dados carregados!!!!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoadingSpinnerComponent {\n  constructor() {\n    this.isLoading = signal(false);\n    this.loadData();\n  }\n  loadData() {\n    this.isLoading.set(true);\n    //simula um processo de carregamento de dados\n    setTimeout(() => {\n      this.isLoading.set(false);\n    }, 4000);\n  }\n  static #_ = this.ɵfac = function LoadingSpinnerComponent_Factory(t) {\n    return new (t || LoadingSpinnerComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoadingSpinnerComponent,\n    selectors: [[\"app-loading-spinner\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 8,\n    vars: 2,\n    consts: [[\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [4, \"ngIf\"], [\"mode\", \"indeterminate\"]],\n    template: function LoadingSpinnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function LoadingSpinnerComponent_Template_button_click_0_listener() {\n          return ctx.loadData();\n        });\n        i0.ɵɵtext(1, \"Carrega Dados\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\")(3, \"br\");\n        i0.ɵɵtemplate(4, LoadingSpinnerComponent_div_4_Template, 2, 0, \"div\", 1)(5, LoadingSpinnerComponent_div_5_Template, 3, 0, \"div\", 1);\n        i0.ɵɵelement(6, \"br\")(7, \"br\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading());\n      }\n    },\n    dependencies: [CommonModule, i1.NgIf, MatProgressBarModule, i2.MatProgressBar],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["signal","CommonModule","MatProgressBarModule","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","LoadingSpinnerComponent","constructor","isLoading","loadData","set","setTimeout","_","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LoadingSpinnerComponent_Template","rf","ctx","ɵɵlistener","LoadingSpinnerComponent_Template_button_click_0_listener","ɵɵtemplate","LoadingSpinnerComponent_div_4_Template","LoadingSpinnerComponent_div_5_Template","ɵɵadvance","ɵɵproperty","i1","NgIf","i2","MatProgressBar","styles"],"sources":["C:\\Users\\cat-r\\Downloads\\signalsApp\\src\\app\\loading-spinner\\loading-spinner.component.ts","C:\\Users\\cat-r\\Downloads\\signalsApp\\src\\app\\loading-spinner\\loading-spinner.component.html"],"sourcesContent":["import { Component, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\n\n@Component({\n  selector: 'app-loading-spinner',\n  standalone: true,\n  imports: [CommonModule, MatProgressBarModule],\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent {\n  isLoading = signal(false);\n\n  constructor() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.isLoading.set(true);\n    //simula um processo de carregamento de dados\n    setTimeout(() => {\n      this.isLoading.set(false);\n    }, 4000);\n  }\n}\n","<button mat-raised-button color=\"primary\" \n(click)=\"loadData()\">Carrega Dados</button>\n    <br>\n    <br>\n  <div *ngIf=\"isLoading()\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  </div>\n  <div *ngIf=\"!isLoading()\">\n    <p>Dados carregados!!!!</p>\n  </div>\n  <br>\n  <br>\n"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAAQC,oBAAoB,QAAO,gCAAgC;;;;;;ICEjEC,EAAA,CAAAC,cAAA,UAAyB;IACvBD,EAAA,CAAAE,SAAA,0BAA0D;IAC5DF,EAAA,CAAAG,YAAA,EAAM;;;;;IACNH,EAAA,CAAAC,cAAA,UAA0B;IACrBD,EAAA,CAAAI,MAAA,2BAAoB;IAAAJ,EAAA,CAAAG,YAAA,EAAI;;;ADI/B,OAAM,MAAOE,uBAAuB;EAGlCC,YAAA;IAFA,KAAAC,SAAS,GAAGV,MAAM,CAAC,KAAK,CAAC;IAGvB,IAAI,CAACW,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACN,IAAI,CAACD,SAAS,CAACE,GAAG,CAAC,IAAI,CAAC;IACxB;IACAC,UAAU,CAAC,MAAK;MACd,IAAI,CAACH,SAAS,CAACE,GAAG,CAAC,KAAK,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC;EACV;EAAC,QAAAE,CAAA,G;qBAbUN,uBAAuB;EAAA;EAAA,QAAAO,EAAA,G;UAAvBP,uBAAuB;IAAAQ,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAf,EAAA,CAAAgB,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZpCtB,EAAA,CAAAC,cAAA,gBACqB;QAArBD,EAAA,CAAAwB,UAAA,mBAAAC,yDAAA;UAAA,OAASF,GAAA,CAAAf,QAAA,EAAU;QAAA,EAAC;QAACR,EAAA,CAAAI,MAAA,oBAAa;QAAAJ,EAAA,CAAAG,YAAA,EAAS;QACvCH,EAAA,CAAAE,SAAA,SAAI;QAENF,EAAA,CAAA0B,UAAA,IAAAC,sCAAA,iBAEM,IAAAC,sCAAA;QAIN5B,EAAA,CAAAE,SAAA,SAAI;;;QANEF,EAAA,CAAA6B,SAAA,GAAiB;QAAjB7B,EAAA,CAAA8B,UAAA,SAAAP,GAAA,CAAAhB,SAAA,GAAiB;QAGjBP,EAAA,CAAA6B,SAAA,GAAkB;QAAlB7B,EAAA,CAAA8B,UAAA,UAAAP,GAAA,CAAAhB,SAAA,GAAkB;;;mBDCdT,YAAY,EAAAiC,EAAA,CAAAC,IAAA,EAAEjC,oBAAoB,EAAAkC,EAAA,CAAAC,cAAA;IAAAC,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}